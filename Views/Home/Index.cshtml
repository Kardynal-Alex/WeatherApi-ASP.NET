@model WeatherApi.Models.GeneralWeatherModel
@using WeatherApi.Models.WeatherModel
@using System.Globalization
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - WeatherApi</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body>
    <div class="col">
        <div class="text-left">
            <h4>@DateTime.Now.ToString("HH:mm tt, MMMM dd", new CultureInfo("en-Us"))</h4>
            <h4>@Model.OpenWeatherMapResponse.City.CityName, @Model.OpenWeatherMapResponse.City.Country</h4>
            <h4>@string.Format("{0}°C", Model.OpenWeatherMapResponse.WeatherList[0].TemperatureInfo.Temperature)</h4>
            <h5>
                Feels like @string.Format("{0}°C", Model.OpenWeatherMapResponse.WeatherList[0].TemperatureInfo.FeelsLikeTemp).
                @Model.OpenWeatherMapResponse.WeatherList[0].WeatherDescription[0].FullDescription
            </h5>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div id="chartContainer" style="height: 370px; width: 100%;"></div>
            <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
            <div class="row">
                <pre>          </pre>
                @foreach (var item in Model.OpenWeatherMapResponse.WeatherList.Take(8))
                {
                    <div class="col p-lg-2">
                        <div><font size="2">@item.WeatherDescription[0].FullDescription</font></div>
                        <div><font size="2">@item.WindInfo.Speed m/s</font></div>
                    </div>
                    <pre>   </pre>
                }
            </div>
        </div>
        <div class="col p-sm-1">
            @await Html.PartialAsync("Widget")
            <div>
                <h4>5-day forecast</h4>
            </div>
            @await Html.PartialAsync("SevenDaysView")
        </div>
    </div>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
</body>
</html>

<script>
    window.onload = function () {

		var chart = new CanvasJS.Chart("chartContainer", {
			animationEnabled: true,
			title: {
				text: "3-Hourly forecast"
            },
            axisY: {
                includeZero: true,
                suffix: " °C"
            },
			toolTip: {
				shared: true
			},
			data: [{
				type: "line",
                indexLabel: "{y}°C",
				showInLegend: false,
				dataPoints: @Html.Raw(ViewBag.DataPoints)}]
		});
		chart.render();
		}
</script>
